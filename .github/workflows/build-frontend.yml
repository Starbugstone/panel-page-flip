name: Build and Deploy Frontend

on:
  # Only trigger on PR merges to main (not direct pushes)
  pull_request:
    types: [closed]
    branches:
      - 'main'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build-and-deploy:
    # Run when a PR to main is merged or manually triggered
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
        
      - name: Upload build artifacts (for reference)
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist
          retention-days: 7
          
      - name: Deploy Frontend via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./frontend/dist/
          server-dir: backend/public/
          # SAFE MODE: Only upload/overwrite frontend files - NEVER deletes anything
          delete: false
          force-upload: true

          
# TODO: Add SSH automation for backend deployment
# Instead of FTP uploading entire backend (too heavy), use SSH to:
# 1. SSH into production server
# 2. cd to project directory  
# 3. git pull origin main
# 4. composer install --no-dev --optimize-autoloader
# 5. php bin/console cache:clear --env=prod
# 6. php bin/console doctrine:migrations:migrate --no-interaction
#
# This approach is much more efficient and follows standard deployment practices.
# Required secrets: SSH_HOST, SSH_USERNAME, SSH_PASSWORD (or SSH_PRIVATE_KEY)
#
# Example implementation:
# - name: Deploy Backend via SSH
#   uses: appleboy/ssh-action@v1.0.3
#   with:
#     host: ${{ secrets.SSH_HOST }}
#     username: ${{ secrets.SSH_USERNAME }}
#     password: ${{ secrets.SSH_PASSWORD }}
#     script: |
#       cd /path/to/project
#       git pull origin main
#       composer install --no-dev --optimize-autoloader
#       php bin/console cache:clear --env=prod
#       php bin/console doctrine:migrations:migrate --no-interaction
#          dangerous-clean-slate: true
#          exclude: |
#            **/.git*
#            **/.git*/**
#            **/node_modules/**
